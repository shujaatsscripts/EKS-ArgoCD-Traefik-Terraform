apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-data-generation-1t
  namespace: spark-ns
  labels:
    yunikorn.apache.org/username: "vara"
    queue: "root.spark"
spec:
  type: Scala
#  pythonVersion: "3"
  mode: cluster
  image: ghcr.io/abin-tiger/spark-tpc-ds:3.1.2
  sparkVersion: "3.1.2"
  imagePullPolicy: Always
  mainClass: com.amazonaws.eks.tpcds.DataGeneration
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  restartPolicy:
    type: Never
  batchScheduler: "yunikorn"
  arguments:
    # TPC-DS data location
    - "s3://dev-aws-raw-zone/TPCDS-TEST-1G"
    # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
    # Data Format
    - "parquet"
    # Scale factor (in GB)
    - "1"
    # Generate data num partitions
    - "50"
    # Create the partitioned fact tables
    - "false"
    # Shuffle to get partitions coalesced into single files.
    - "false"
    # Logging set to WARN
    - "true"
  hadoopConf:
    # IRSA configuration
    # "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.WebIdentityTokenCredentialsProvider"
    "fs.s3a.aws.credentials.provider": "com.amazonaws.auth.InstanceProfileCredentialsProvider"
    "fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "fs.s3.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "mapreduce.fileoutputcommitter.algorithm.version": "2"
  sparkConf:
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    # S3 Configs
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.readahead.range": "256K"
    "spark.hadoop.fs.s3a.input.fadvise": "random"
    "spark.hadoop.mapreduce.outputcommitter.factory.scheme.s3a": "org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory"
    "spark.sql.execution.arrow.pyspark.enabled": "true"
    "spark.sql.execution.arrow.pyspark.fallback.enabled": "true"
    # "spark.eventLog.enabled": "true"
    # "spark.eventLog.dir": "s3a://dev-aws-raw-zone/spark-event-logs/"
    # "spark.kubernetes.driver.label.queue": "root.spark"
    # "spark.kubernetes.driver.label.yunikorn.apache.org/username": "vara"
    # "spark.kubernetes.executor.label.queue": "root.spark"
    # "spark.kubernetes.executor.label.yunikorn.apache.org/username": "vara"
  driver:
    cores: 2
    memory: "1g"
#    memoryOverhead: "1g"
    labels:
      version: 3.1.2
    serviceAccount: spark-sa
  executor:
    cores: 3
    instances: 3
    memory: "20g"
    memoryOverhead: "2g"
    serviceAccount: spark-sa
    labels:
      version: 3.1.2
